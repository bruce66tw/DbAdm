{{#unless AuthType0}}
using Base.Enums;
{{/unless}}
using Base.Models;
using Base.Services;
using BaseWeb.Services;
{{#unless AuthType0}}
using BaseWeb.Attributes;
{{/unless}}
using {{Project}}.Services;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;

namespace {{Project}}.Controllers
{
    {{#if AuthType1}}
    [XgProgAuth]
    {{/if}}
    public class {{Table}}Controller : Controller
    {
        {{#if AuthType2}}
        [XgProgAuth(CrudEstr.Read)]
        {{/if}}
        public ActionResult Read()
        {
	{{#if ReadSelectCols}}
			//for read view
		{{#each ReadSelectCols}}
			ViewBag.{{this}} = _Code.Get{{this}}();
		{{/each}}
	{{/if}}
	{{#if EditSelectCols}}
			//for edit view
		{{#each EditSelectCols}}
			ViewBag.{{this}} = _Code.Get{{this}}();
		{{/each}}
	{{/if}}
            return View();
        }

        public ActionResult Edit()
        {
            return View();
        }

        [HttpPost]
        {{#if AuthType2}}
        [XgProgAuth(CrudEstr.Read)]
        {{/if}}
        public ContentResult GetPage(DtDto dt)
        {
            return Content(new {{Table}}Read().GetPage(dt).ToString(), _Web.AppJson);
        }

        {{#if HasFile}}
        [HttpPost]
            {{#if AuthType2}}
        [XgProgAuth(CrudEstr.Create)]
            {{/if}}
        //TODO: add your code, tSn_fid ex: t03_FileName
        public JsonResult Create(string json, List<IFormFile> t03_FileName)
        {
            return Json(new {{Table}}Edit().SaveCreateAsnyc(_Json.StrToJson(json), t03_FileName));
        }

        [HttpPost]
            {{#if AuthType2}}
        [XgProgAuth(CrudEstr.Update)]
            {{/if}}
        //TODO: add your code, tSn_fid ex: t03_FileName
        public JsonResult Update(string key, string json, List<IFormFile> t03_FileName)
        {
            return Json(new {{Table}}Edit().SaveUpdateAsnyc(key, _Json.StrToJson(json), t03_FileName));
        }

        //TODO: add your code
        //get file/image
            {{#if AuthType2}}
        [XgProgAuth(CrudEstr.View)]
            {{/if}}
        public FileContentResult GetFile(string table, string fid, string key)
        {
            var path = _File.GetFirstPath(_Xp.GetDirUserLicence(), "FileName_" + key, _Xp.NoImagePath);
            return _WebFile.EchoImage(path);
        }
        {{else}}
        [HttpPost]
            {{#if AuthType2}}
        [XgProgAuth(CrudEstr.Create)]
            {{/if}}
        public JsonResult Create(string json)
        {
            return Json(new {{Table}}Edit().Save("", _Json.StrToJson(json)));
        }

        [HttpPost]
            {{#if AuthType2}}
        [XgProgAuth(CrudEstr.Update)]
            {{/if}}
        public JsonResult Update(string key, string json)
        {
            return Json(new {{Table}}Edit().Save(key, _Json.StrToJson(json)));
        }
        {{/if}}

        [HttpPost]
        {{#if AuthType2}}
        [XgProgAuth(CrudEstr.Update)]
        {{/if}}
        public JsonResult SetStatus(string key, bool status)
        {
            return Json(_Db.SetRowStatus("dbo.[{{Table}}]", "Id", key, status));
        }

        [HttpPost]
        {{#if AuthType2}}
        [XgProgAuth(CrudEstr.Delete)]
        {{/if}}
        public JsonResult Delete(string key)
        {
            return Json(new {{Table}}Edit().Delete(key));
        }

        [HttpPost]
        {{#if AuthType2}}
        [XgProgAuth(CrudEstr.View)]
        {{/if}}
        public ContentResult GetJson(string key)
        {
            return Content(new {{Table}}Edit().GetJson(key).ToString(), _Web.AppJson);
        }

    }//class
}